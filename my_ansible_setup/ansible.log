2023-09-10 11:20:30,485 p=16401 u=dclunn n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-09-10 11:20:30,487 p=16401 u=dclunn n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-09-10 11:20:30,595 p=16401 u=dclunn n=ansible | PLAY [localhost] *************************************************************************************************************************************************************************************
2023-09-10 11:20:30,615 p=16401 u=dclunn n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************
2023-09-10 11:20:31,112 p=16401 u=dclunn n=ansible | ok: [localhost]
2023-09-10 11:20:31,118 p=16401 u=dclunn n=ansible | TASK [Install things] ********************************************************************************************************************************************************************************
2023-09-10 11:20:32,469 p=16401 u=dclunn n=ansible | changed: [localhost] => (item=tmux)
2023-09-10 11:20:33,606 p=16401 u=dclunn n=ansible | changed: [localhost] => (item=curl)
2023-09-10 11:20:34,752 p=16401 u=dclunn n=ansible | changed: [localhost] => (item=neovim)
2023-09-10 11:20:35,892 p=16401 u=dclunn n=ansible | changed: [localhost] => (item=git)
2023-09-10 11:20:37,029 p=16401 u=dclunn n=ansible | changed: [localhost] => (item=font-config)
2023-09-10 11:20:37,038 p=16401 u=dclunn n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************
2023-09-10 11:20:37,038 p=16401 u=dclunn n=ansible | localhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-09-10 11:25:26,993 p=17279 u=dclunn n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-09-10 11:25:26,995 p=17279 u=dclunn n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-09-10 11:25:27,092 p=17279 u=dclunn n=ansible | PLAY [localhost] *************************************************************************************************************************************************************************************
2023-09-10 11:25:27,109 p=17279 u=dclunn n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************
2023-09-10 11:25:27,622 p=17279 u=dclunn n=ansible | ok: [localhost]
2023-09-10 11:25:27,627 p=17279 u=dclunn n=ansible | TASK [Install things] ********************************************************************************************************************************************************************************
2023-09-10 11:25:28,943 p=17279 u=dclunn n=ansible | changed: [localhost] => (item=tmux)
2023-09-10 11:25:30,098 p=17279 u=dclunn n=ansible | changed: [localhost] => (item=curl)
2023-09-10 11:25:31,244 p=17279 u=dclunn n=ansible | changed: [localhost] => (item=neovim)
2023-09-10 11:25:32,391 p=17279 u=dclunn n=ansible | changed: [localhost] => (item=git)
2023-09-10 11:25:33,530 p=17279 u=dclunn n=ansible | changed: [localhost] => (item=font-config)
2023-09-10 11:25:33,541 p=17279 u=dclunn n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************
2023-09-10 11:25:33,541 p=17279 u=dclunn n=ansible | localhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-09-10 11:32:00,287 p=18547 u=dclunn n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-09-10 11:32:00,288 p=18547 u=dclunn n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-09-10 11:32:00,373 p=18547 u=dclunn n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: anynamewilldo

2023-09-10 11:32:00,373 p=18547 u=dclunn n=ansible | PLAY [anynamewilldo] *********************************************************************************************************************************************************************************
2023-09-10 11:32:00,373 p=18547 u=dclunn n=ansible | skipping: no hosts matched
2023-09-10 11:32:00,373 p=18547 u=dclunn n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************
2023-09-10 11:32:19,344 p=18582 u=dclunn n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-09-10 11:32:19,345 p=18582 u=dclunn n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-09-10 11:32:19,423 p=18582 u=dclunn n=ansible | PLAY [localhost] *************************************************************************************************************************************************************************************
2023-09-10 11:32:19,438 p=18582 u=dclunn n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************
2023-09-10 11:32:20,000 p=18582 u=dclunn n=ansible | ok: [localhost]
2023-09-10 11:32:20,006 p=18582 u=dclunn n=ansible | TASK [Install things] ********************************************************************************************************************************************************************************
2023-09-10 11:32:22,627 p=18582 u=dclunn n=ansible | failed: [localhost] (item=tmux) => {"ansible_loop_var": "item", "changed": false, "item": "tmux", "msg": "Usage: brew install [options] formula|cask [...]\n\nInstall a formula or cask. Additional options specific to a formula may be\nappended to the command.\n\nUnless HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK is set, brew upgrade or brew\nreinstall will be run for outdated dependents and dependents with broken\nlinkage, respectively.\n\nUnless HOMEBREW_NO_INSTALL_CLEANUP is set, brew cleanup will then be run for\nthe installed formulae or, every 30 days, for all formulae.\n\nUnless HOMEBREW_NO_INSTALL_UPGRADE is set, brew install formula will\nupgrade formula if it is already installed but outdated.\n\n  -d, --debug                      If brewing fails, open an interactive\n                                   debugging session with access to IRB or a\n                                   shell inside the temporary build directory.\n  -f, --force                      Install formulae without checking for\n                                   previously installed keg-only or non-migrated\n                                   versions. When installing casks, overwrite\n                                   existing files (binaries and symlinks are\n                                   excluded, unless originally from the same\n                                   cask).\n  -v, --verbose                    Print the verification and postinstall steps.\n  -n, --dry-run                    Show what would be installed, but do not\n                                   actually install anything.\n      --formula, --formulae        Treat all named arguments as formulae.\n      --ignore-dependencies        An unsupported Homebrew development flag to\n                                   skip installing any dependencies of any kind.\n                                   If the dependencies are not already present,\n                                   the formula will have issues. If you're not\n                                   developing Homebrew, consider adjusting your\n                                   PATH rather than using this flag.\n      --only-dependencies          Install the dependencies with specified\n                                   options but do not install the formula\n                                   itself.\n      --cc                         Attempt to compile using the specified\n                                   compiler, which should be the name of the\n                                   compiler's executable, e.g. gcc-7 for GCC\n                                   7. In order to use LLVM's clang, specify\n                                   llvm_clang. To use the Apple-provided\n                                   clang, specify clang. This option will only\n                                   accept compilers that are provided by\n                                   Homebrew or bundled with macOS. Please do not\n                                   file issues if you encounter errors while\n                                   using this option.\n  -s, --build-from-source          Compile formula from source even if a\n                                   bottle is provided. Dependencies will still\n                                   be installed from bottles if they are\n                                   available.\n      --force-bottle               Install from a bottle if it exists for the\n                                   current or newest version of macOS, even if\n                                   it would not normally be used for\n                                   installation.\n      --include-test               Install testing dependencies required to run\n                                   brew test formula.\n      --HEAD                       If formula defines it, install the HEAD\n                                   version, aka. main, trunk, unstable, master.\n      --fetch-HEAD                 Fetch the upstream repository to detect if\n                                   the HEAD installation of the formula is\n                                   outdated. Otherwise, the repository's HEAD\n                                   will only be checked for updates when a new\n                                   stable or development version has been\n                                   released.\n      --keep-tmp                   Retain the temporary files created during\n                                   installation.\n      --debug-symbols              Generate debug symbols on build. Source will\n                                   be retained in a cache directory.\n      --build-bottle               Prepare the formula for eventual bottling\n                                   during installation, skipping any\n                                   post-install steps.\n      --skip-post-install          Install but skip any post-install steps.\n      --bottle-arch                Optimise bottles for the specified\n                                   architecture rather than the oldest\n                                   architecture supported by the version of\n                                   macOS the bottles are built on.\n      --display-times              Print install times for each package at the\n                                   end of the run.\n  -i, --interactive                Download and patch formula, then open a\n                                   shell. This allows the user to run\n                                   ./configure --help and otherwise determine\n                                   how to turn the software package into a\n                                   Homebrew package.\n  -g, --git                        Create a Git repository, useful for creating\n                                   patches to the software.\n      --overwrite                  Delete files that already exist in the prefix\n                                   while linking.\n      --cask, --casks              Treat all named arguments as casks.\n      --[no-]binaries              Disable/enable linking of helper executables\n                                   (default: enabled).\n      --require-sha                Require all casks to have a checksum.\n      --[no-]quarantine            Disable/enable quarantining of downloads\n                                   (default: enabled).\n      --adopt                      Adopt existing artifacts in the destination\n                                   that are identical to those being installed.\n                                   Cannot be combined with --force.\n      --skip-cask-deps             Skip installing cask dependencies.\n      --zap                        For use with brew reinstall --cask. Remove\n                                   all files associated with a cask. May remove\n                                   files which are shared between applications.\n      --appdir                     Target location for Applications (default:\n                                   /Applications).\n      --keyboard-layoutdir         Target location for Keyboard Layouts\n                                   (default: /Library/Keyboard Layouts).\n      --colorpickerdir             Target location for Color Pickers (default:\n                                   ~/Library/ColorPickers).\n      --prefpanedir                Target location for Preference Panes\n                                   (default: ~/Library/PreferencePanes).\n      --qlplugindir                Target location for QuickLook Plugins\n                                   (default: ~/Library/QuickLook).\n      --mdimporterdir              Target location for Spotlight Plugins\n                                   (default: ~/Library/Spotlight).\n      --dictionarydir              Target location for Dictionaries (default:\n                                   ~/Library/Dictionaries).\n      --fontdir                    Target location for Fonts (default:\n                                   ~/Library/Fonts).\n      --servicedir                 Target location for Services (default:\n                                   ~/Library/Services).\n      --input-methoddir            Target location for Input Methods (default:\n                                   ~/Library/Input Methods).\n      --internet-plugindir         Target location for Internet Plugins\n                                   (default: ~/Library/Internet Plug-Ins).\n      --audio-unit-plugindir       Target location for Audio Unit Plugins\n                                   (default:\n                                   ~/Library/Audio/Plug-Ins/Components).\n      --vst-plugindir              Target location for VST Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST).\n      --vst3-plugindir             Target location for VST3 Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST3).\n      --screen-saverdir            Target location for Screen Savers (default:\n                                   ~/Library/Screen Savers).\n      --language                   Comma-separated list of language codes to\n                                   prefer for cask installation. The first\n                                   matching language is used, otherwise it\n                                   reverts to the cask's default language. The\n                                   default value is the language of your system.\n  -q, --quiet                      Make some output more quiet.\n  -h, --help                       Show this message.\n\nError: Invalid usage: This command requires at least 1 formula or cask argument."}
2023-09-10 11:32:25,161 p=18582 u=dclunn n=ansible | failed: [localhost] (item=curl) => {"ansible_loop_var": "item", "changed": false, "item": "curl", "msg": "Usage: brew install [options] formula|cask [...]\n\nInstall a formula or cask. Additional options specific to a formula may be\nappended to the command.\n\nUnless HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK is set, brew upgrade or brew\nreinstall will be run for outdated dependents and dependents with broken\nlinkage, respectively.\n\nUnless HOMEBREW_NO_INSTALL_CLEANUP is set, brew cleanup will then be run for\nthe installed formulae or, every 30 days, for all formulae.\n\nUnless HOMEBREW_NO_INSTALL_UPGRADE is set, brew install formula will\nupgrade formula if it is already installed but outdated.\n\n  -d, --debug                      If brewing fails, open an interactive\n                                   debugging session with access to IRB or a\n                                   shell inside the temporary build directory.\n  -f, --force                      Install formulae without checking for\n                                   previously installed keg-only or non-migrated\n                                   versions. When installing casks, overwrite\n                                   existing files (binaries and symlinks are\n                                   excluded, unless originally from the same\n                                   cask).\n  -v, --verbose                    Print the verification and postinstall steps.\n  -n, --dry-run                    Show what would be installed, but do not\n                                   actually install anything.\n      --formula, --formulae        Treat all named arguments as formulae.\n      --ignore-dependencies        An unsupported Homebrew development flag to\n                                   skip installing any dependencies of any kind.\n                                   If the dependencies are not already present,\n                                   the formula will have issues. If you're not\n                                   developing Homebrew, consider adjusting your\n                                   PATH rather than using this flag.\n      --only-dependencies          Install the dependencies with specified\n                                   options but do not install the formula\n                                   itself.\n      --cc                         Attempt to compile using the specified\n                                   compiler, which should be the name of the\n                                   compiler's executable, e.g. gcc-7 for GCC\n                                   7. In order to use LLVM's clang, specify\n                                   llvm_clang. To use the Apple-provided\n                                   clang, specify clang. This option will only\n                                   accept compilers that are provided by\n                                   Homebrew or bundled with macOS. Please do not\n                                   file issues if you encounter errors while\n                                   using this option.\n  -s, --build-from-source          Compile formula from source even if a\n                                   bottle is provided. Dependencies will still\n                                   be installed from bottles if they are\n                                   available.\n      --force-bottle               Install from a bottle if it exists for the\n                                   current or newest version of macOS, even if\n                                   it would not normally be used for\n                                   installation.\n      --include-test               Install testing dependencies required to run\n                                   brew test formula.\n      --HEAD                       If formula defines it, install the HEAD\n                                   version, aka. main, trunk, unstable, master.\n      --fetch-HEAD                 Fetch the upstream repository to detect if\n                                   the HEAD installation of the formula is\n                                   outdated. Otherwise, the repository's HEAD\n                                   will only be checked for updates when a new\n                                   stable or development version has been\n                                   released.\n      --keep-tmp                   Retain the temporary files created during\n                                   installation.\n      --debug-symbols              Generate debug symbols on build. Source will\n                                   be retained in a cache directory.\n      --build-bottle               Prepare the formula for eventual bottling\n                                   during installation, skipping any\n                                   post-install steps.\n      --skip-post-install          Install but skip any post-install steps.\n      --bottle-arch                Optimise bottles for the specified\n                                   architecture rather than the oldest\n                                   architecture supported by the version of\n                                   macOS the bottles are built on.\n      --display-times              Print install times for each package at the\n                                   end of the run.\n  -i, --interactive                Download and patch formula, then open a\n                                   shell. This allows the user to run\n                                   ./configure --help and otherwise determine\n                                   how to turn the software package into a\n                                   Homebrew package.\n  -g, --git                        Create a Git repository, useful for creating\n                                   patches to the software.\n      --overwrite                  Delete files that already exist in the prefix\n                                   while linking.\n      --cask, --casks              Treat all named arguments as casks.\n      --[no-]binaries              Disable/enable linking of helper executables\n                                   (default: enabled).\n      --require-sha                Require all casks to have a checksum.\n      --[no-]quarantine            Disable/enable quarantining of downloads\n                                   (default: enabled).\n      --adopt                      Adopt existing artifacts in the destination\n                                   that are identical to those being installed.\n                                   Cannot be combined with --force.\n      --skip-cask-deps             Skip installing cask dependencies.\n      --zap                        For use with brew reinstall --cask. Remove\n                                   all files associated with a cask. May remove\n                                   files which are shared between applications.\n      --appdir                     Target location for Applications (default:\n                                   /Applications).\n      --keyboard-layoutdir         Target location for Keyboard Layouts\n                                   (default: /Library/Keyboard Layouts).\n      --colorpickerdir             Target location for Color Pickers (default:\n                                   ~/Library/ColorPickers).\n      --prefpanedir                Target location for Preference Panes\n                                   (default: ~/Library/PreferencePanes).\n      --qlplugindir                Target location for QuickLook Plugins\n                                   (default: ~/Library/QuickLook).\n      --mdimporterdir              Target location for Spotlight Plugins\n                                   (default: ~/Library/Spotlight).\n      --dictionarydir              Target location for Dictionaries (default:\n                                   ~/Library/Dictionaries).\n      --fontdir                    Target location for Fonts (default:\n                                   ~/Library/Fonts).\n      --servicedir                 Target location for Services (default:\n                                   ~/Library/Services).\n      --input-methoddir            Target location for Input Methods (default:\n                                   ~/Library/Input Methods).\n      --internet-plugindir         Target location for Internet Plugins\n                                   (default: ~/Library/Internet Plug-Ins).\n      --audio-unit-plugindir       Target location for Audio Unit Plugins\n                                   (default:\n                                   ~/Library/Audio/Plug-Ins/Components).\n      --vst-plugindir              Target location for VST Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST).\n      --vst3-plugindir             Target location for VST3 Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST3).\n      --screen-saverdir            Target location for Screen Savers (default:\n                                   ~/Library/Screen Savers).\n      --language                   Comma-separated list of language codes to\n                                   prefer for cask installation. The first\n                                   matching language is used, otherwise it\n                                   reverts to the cask's default language. The\n                                   default value is the language of your system.\n  -q, --quiet                      Make some output more quiet.\n  -h, --help                       Show this message.\n\nError: Invalid usage: This command requires at least 1 formula or cask argument."}
2023-09-10 11:32:27,688 p=18582 u=dclunn n=ansible | failed: [localhost] (item=neovim) => {"ansible_loop_var": "item", "changed": false, "item": "neovim", "msg": "Usage: brew install [options] formula|cask [...]\n\nInstall a formula or cask. Additional options specific to a formula may be\nappended to the command.\n\nUnless HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK is set, brew upgrade or brew\nreinstall will be run for outdated dependents and dependents with broken\nlinkage, respectively.\n\nUnless HOMEBREW_NO_INSTALL_CLEANUP is set, brew cleanup will then be run for\nthe installed formulae or, every 30 days, for all formulae.\n\nUnless HOMEBREW_NO_INSTALL_UPGRADE is set, brew install formula will\nupgrade formula if it is already installed but outdated.\n\n  -d, --debug                      If brewing fails, open an interactive\n                                   debugging session with access to IRB or a\n                                   shell inside the temporary build directory.\n  -f, --force                      Install formulae without checking for\n                                   previously installed keg-only or non-migrated\n                                   versions. When installing casks, overwrite\n                                   existing files (binaries and symlinks are\n                                   excluded, unless originally from the same\n                                   cask).\n  -v, --verbose                    Print the verification and postinstall steps.\n  -n, --dry-run                    Show what would be installed, but do not\n                                   actually install anything.\n      --formula, --formulae        Treat all named arguments as formulae.\n      --ignore-dependencies        An unsupported Homebrew development flag to\n                                   skip installing any dependencies of any kind.\n                                   If the dependencies are not already present,\n                                   the formula will have issues. If you're not\n                                   developing Homebrew, consider adjusting your\n                                   PATH rather than using this flag.\n      --only-dependencies          Install the dependencies with specified\n                                   options but do not install the formula\n                                   itself.\n      --cc                         Attempt to compile using the specified\n                                   compiler, which should be the name of the\n                                   compiler's executable, e.g. gcc-7 for GCC\n                                   7. In order to use LLVM's clang, specify\n                                   llvm_clang. To use the Apple-provided\n                                   clang, specify clang. This option will only\n                                   accept compilers that are provided by\n                                   Homebrew or bundled with macOS. Please do not\n                                   file issues if you encounter errors while\n                                   using this option.\n  -s, --build-from-source          Compile formula from source even if a\n                                   bottle is provided. Dependencies will still\n                                   be installed from bottles if they are\n                                   available.\n      --force-bottle               Install from a bottle if it exists for the\n                                   current or newest version of macOS, even if\n                                   it would not normally be used for\n                                   installation.\n      --include-test               Install testing dependencies required to run\n                                   brew test formula.\n      --HEAD                       If formula defines it, install the HEAD\n                                   version, aka. main, trunk, unstable, master.\n      --fetch-HEAD                 Fetch the upstream repository to detect if\n                                   the HEAD installation of the formula is\n                                   outdated. Otherwise, the repository's HEAD\n                                   will only be checked for updates when a new\n                                   stable or development version has been\n                                   released.\n      --keep-tmp                   Retain the temporary files created during\n                                   installation.\n      --debug-symbols              Generate debug symbols on build. Source will\n                                   be retained in a cache directory.\n      --build-bottle               Prepare the formula for eventual bottling\n                                   during installation, skipping any\n                                   post-install steps.\n      --skip-post-install          Install but skip any post-install steps.\n      --bottle-arch                Optimise bottles for the specified\n                                   architecture rather than the oldest\n                                   architecture supported by the version of\n                                   macOS the bottles are built on.\n      --display-times              Print install times for each package at the\n                                   end of the run.\n  -i, --interactive                Download and patch formula, then open a\n                                   shell. This allows the user to run\n                                   ./configure --help and otherwise determine\n                                   how to turn the software package into a\n                                   Homebrew package.\n  -g, --git                        Create a Git repository, useful for creating\n                                   patches to the software.\n      --overwrite                  Delete files that already exist in the prefix\n                                   while linking.\n      --cask, --casks              Treat all named arguments as casks.\n      --[no-]binaries              Disable/enable linking of helper executables\n                                   (default: enabled).\n      --require-sha                Require all casks to have a checksum.\n      --[no-]quarantine            Disable/enable quarantining of downloads\n                                   (default: enabled).\n      --adopt                      Adopt existing artifacts in the destination\n                                   that are identical to those being installed.\n                                   Cannot be combined with --force.\n      --skip-cask-deps             Skip installing cask dependencies.\n      --zap                        For use with brew reinstall --cask. Remove\n                                   all files associated with a cask. May remove\n                                   files which are shared between applications.\n      --appdir                     Target location for Applications (default:\n                                   /Applications).\n      --keyboard-layoutdir         Target location for Keyboard Layouts\n                                   (default: /Library/Keyboard Layouts).\n      --colorpickerdir             Target location for Color Pickers (default:\n                                   ~/Library/ColorPickers).\n      --prefpanedir                Target location for Preference Panes\n                                   (default: ~/Library/PreferencePanes).\n      --qlplugindir                Target location for QuickLook Plugins\n                                   (default: ~/Library/QuickLook).\n      --mdimporterdir              Target location for Spotlight Plugins\n                                   (default: ~/Library/Spotlight).\n      --dictionarydir              Target location for Dictionaries (default:\n                                   ~/Library/Dictionaries).\n      --fontdir                    Target location for Fonts (default:\n                                   ~/Library/Fonts).\n      --servicedir                 Target location for Services (default:\n                                   ~/Library/Services).\n      --input-methoddir            Target location for Input Methods (default:\n                                   ~/Library/Input Methods).\n      --internet-plugindir         Target location for Internet Plugins\n                                   (default: ~/Library/Internet Plug-Ins).\n      --audio-unit-plugindir       Target location for Audio Unit Plugins\n                                   (default:\n                                   ~/Library/Audio/Plug-Ins/Components).\n      --vst-plugindir              Target location for VST Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST).\n      --vst3-plugindir             Target location for VST3 Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST3).\n      --screen-saverdir            Target location for Screen Savers (default:\n                                   ~/Library/Screen Savers).\n      --language                   Comma-separated list of language codes to\n                                   prefer for cask installation. The first\n                                   matching language is used, otherwise it\n                                   reverts to the cask's default language. The\n                                   default value is the language of your system.\n  -q, --quiet                      Make some output more quiet.\n  -h, --help                       Show this message.\n\nError: Invalid usage: This command requires at least 1 formula or cask argument."}
2023-09-10 11:32:30,218 p=18582 u=dclunn n=ansible | failed: [localhost] (item=git) => {"ansible_loop_var": "item", "changed": false, "item": "git", "msg": "Usage: brew install [options] formula|cask [...]\n\nInstall a formula or cask. Additional options specific to a formula may be\nappended to the command.\n\nUnless HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK is set, brew upgrade or brew\nreinstall will be run for outdated dependents and dependents with broken\nlinkage, respectively.\n\nUnless HOMEBREW_NO_INSTALL_CLEANUP is set, brew cleanup will then be run for\nthe installed formulae or, every 30 days, for all formulae.\n\nUnless HOMEBREW_NO_INSTALL_UPGRADE is set, brew install formula will\nupgrade formula if it is already installed but outdated.\n\n  -d, --debug                      If brewing fails, open an interactive\n                                   debugging session with access to IRB or a\n                                   shell inside the temporary build directory.\n  -f, --force                      Install formulae without checking for\n                                   previously installed keg-only or non-migrated\n                                   versions. When installing casks, overwrite\n                                   existing files (binaries and symlinks are\n                                   excluded, unless originally from the same\n                                   cask).\n  -v, --verbose                    Print the verification and postinstall steps.\n  -n, --dry-run                    Show what would be installed, but do not\n                                   actually install anything.\n      --formula, --formulae        Treat all named arguments as formulae.\n      --ignore-dependencies        An unsupported Homebrew development flag to\n                                   skip installing any dependencies of any kind.\n                                   If the dependencies are not already present,\n                                   the formula will have issues. If you're not\n                                   developing Homebrew, consider adjusting your\n                                   PATH rather than using this flag.\n      --only-dependencies          Install the dependencies with specified\n                                   options but do not install the formula\n                                   itself.\n      --cc                         Attempt to compile using the specified\n                                   compiler, which should be the name of the\n                                   compiler's executable, e.g. gcc-7 for GCC\n                                   7. In order to use LLVM's clang, specify\n                                   llvm_clang. To use the Apple-provided\n                                   clang, specify clang. This option will only\n                                   accept compilers that are provided by\n                                   Homebrew or bundled with macOS. Please do not\n                                   file issues if you encounter errors while\n                                   using this option.\n  -s, --build-from-source          Compile formula from source even if a\n                                   bottle is provided. Dependencies will still\n                                   be installed from bottles if they are\n                                   available.\n      --force-bottle               Install from a bottle if it exists for the\n                                   current or newest version of macOS, even if\n                                   it would not normally be used for\n                                   installation.\n      --include-test               Install testing dependencies required to run\n                                   brew test formula.\n      --HEAD                       If formula defines it, install the HEAD\n                                   version, aka. main, trunk, unstable, master.\n      --fetch-HEAD                 Fetch the upstream repository to detect if\n                                   the HEAD installation of the formula is\n                                   outdated. Otherwise, the repository's HEAD\n                                   will only be checked for updates when a new\n                                   stable or development version has been\n                                   released.\n      --keep-tmp                   Retain the temporary files created during\n                                   installation.\n      --debug-symbols              Generate debug symbols on build. Source will\n                                   be retained in a cache directory.\n      --build-bottle               Prepare the formula for eventual bottling\n                                   during installation, skipping any\n                                   post-install steps.\n      --skip-post-install          Install but skip any post-install steps.\n      --bottle-arch                Optimise bottles for the specified\n                                   architecture rather than the oldest\n                                   architecture supported by the version of\n                                   macOS the bottles are built on.\n      --display-times              Print install times for each package at the\n                                   end of the run.\n  -i, --interactive                Download and patch formula, then open a\n                                   shell. This allows the user to run\n                                   ./configure --help and otherwise determine\n                                   how to turn the software package into a\n                                   Homebrew package.\n  -g, --git                        Create a Git repository, useful for creating\n                                   patches to the software.\n      --overwrite                  Delete files that already exist in the prefix\n                                   while linking.\n      --cask, --casks              Treat all named arguments as casks.\n      --[no-]binaries              Disable/enable linking of helper executables\n                                   (default: enabled).\n      --require-sha                Require all casks to have a checksum.\n      --[no-]quarantine            Disable/enable quarantining of downloads\n                                   (default: enabled).\n      --adopt                      Adopt existing artifacts in the destination\n                                   that are identical to those being installed.\n                                   Cannot be combined with --force.\n      --skip-cask-deps             Skip installing cask dependencies.\n      --zap                        For use with brew reinstall --cask. Remove\n                                   all files associated with a cask. May remove\n                                   files which are shared between applications.\n      --appdir                     Target location for Applications (default:\n                                   /Applications).\n      --keyboard-layoutdir         Target location for Keyboard Layouts\n                                   (default: /Library/Keyboard Layouts).\n      --colorpickerdir             Target location for Color Pickers (default:\n                                   ~/Library/ColorPickers).\n      --prefpanedir                Target location for Preference Panes\n                                   (default: ~/Library/PreferencePanes).\n      --qlplugindir                Target location for QuickLook Plugins\n                                   (default: ~/Library/QuickLook).\n      --mdimporterdir              Target location for Spotlight Plugins\n                                   (default: ~/Library/Spotlight).\n      --dictionarydir              Target location for Dictionaries (default:\n                                   ~/Library/Dictionaries).\n      --fontdir                    Target location for Fonts (default:\n                                   ~/Library/Fonts).\n      --servicedir                 Target location for Services (default:\n                                   ~/Library/Services).\n      --input-methoddir            Target location for Input Methods (default:\n                                   ~/Library/Input Methods).\n      --internet-plugindir         Target location for Internet Plugins\n                                   (default: ~/Library/Internet Plug-Ins).\n      --audio-unit-plugindir       Target location for Audio Unit Plugins\n                                   (default:\n                                   ~/Library/Audio/Plug-Ins/Components).\n      --vst-plugindir              Target location for VST Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST).\n      --vst3-plugindir             Target location for VST3 Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST3).\n      --screen-saverdir            Target location for Screen Savers (default:\n                                   ~/Library/Screen Savers).\n      --language                   Comma-separated list of language codes to\n                                   prefer for cask installation. The first\n                                   matching language is used, otherwise it\n                                   reverts to the cask's default language. The\n                                   default value is the language of your system.\n  -q, --quiet                      Make some output more quiet.\n  -h, --help                       Show this message.\n\nError: Invalid usage: This command requires at least 1 formula or cask argument."}
2023-09-10 11:32:30,219 p=18582 u=dclunn n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************
2023-09-10 11:32:30,219 p=18582 u=dclunn n=ansible | localhost                  : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-09-10 11:33:48,050 p=20269 u=dclunn n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-09-10 11:33:48,051 p=20269 u=dclunn n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-09-10 11:33:48,142 p=20269 u=dclunn n=ansible | PLAY [localhost] *************************************************************************************************************************************************************************************
2023-09-10 11:33:48,145 p=20269 u=dclunn n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************
2023-09-10 11:33:48,470 p=20269 u=dclunn n=ansible | ok: [localhost]
2023-09-10 11:33:48,475 p=20269 u=dclunn n=ansible | TASK [Install things] ********************************************************************************************************************************************************************************
2023-09-10 11:33:51,064 p=20269 u=dclunn n=ansible | failed: [localhost] (item=tmux) => {"ansible_loop_var": "item", "changed": false, "item": "tmux", "msg": "Usage: brew install [options] formula|cask [...]\n\nInstall a formula or cask. Additional options specific to a formula may be\nappended to the command.\n\nUnless HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK is set, brew upgrade or brew\nreinstall will be run for outdated dependents and dependents with broken\nlinkage, respectively.\n\nUnless HOMEBREW_NO_INSTALL_CLEANUP is set, brew cleanup will then be run for\nthe installed formulae or, every 30 days, for all formulae.\n\nUnless HOMEBREW_NO_INSTALL_UPGRADE is set, brew install formula will\nupgrade formula if it is already installed but outdated.\n\n  -d, --debug                      If brewing fails, open an interactive\n                                   debugging session with access to IRB or a\n                                   shell inside the temporary build directory.\n  -f, --force                      Install formulae without checking for\n                                   previously installed keg-only or non-migrated\n                                   versions. When installing casks, overwrite\n                                   existing files (binaries and symlinks are\n                                   excluded, unless originally from the same\n                                   cask).\n  -v, --verbose                    Print the verification and postinstall steps.\n  -n, --dry-run                    Show what would be installed, but do not\n                                   actually install anything.\n      --formula, --formulae        Treat all named arguments as formulae.\n      --ignore-dependencies        An unsupported Homebrew development flag to\n                                   skip installing any dependencies of any kind.\n                                   If the dependencies are not already present,\n                                   the formula will have issues. If you're not\n                                   developing Homebrew, consider adjusting your\n                                   PATH rather than using this flag.\n      --only-dependencies          Install the dependencies with specified\n                                   options but do not install the formula\n                                   itself.\n      --cc                         Attempt to compile using the specified\n                                   compiler, which should be the name of the\n                                   compiler's executable, e.g. gcc-7 for GCC\n                                   7. In order to use LLVM's clang, specify\n                                   llvm_clang. To use the Apple-provided\n                                   clang, specify clang. This option will only\n                                   accept compilers that are provided by\n                                   Homebrew or bundled with macOS. Please do not\n                                   file issues if you encounter errors while\n                                   using this option.\n  -s, --build-from-source          Compile formula from source even if a\n                                   bottle is provided. Dependencies will still\n                                   be installed from bottles if they are\n                                   available.\n      --force-bottle               Install from a bottle if it exists for the\n                                   current or newest version of macOS, even if\n                                   it would not normally be used for\n                                   installation.\n      --include-test               Install testing dependencies required to run\n                                   brew test formula.\n      --HEAD                       If formula defines it, install the HEAD\n                                   version, aka. main, trunk, unstable, master.\n      --fetch-HEAD                 Fetch the upstream repository to detect if\n                                   the HEAD installation of the formula is\n                                   outdated. Otherwise, the repository's HEAD\n                                   will only be checked for updates when a new\n                                   stable or development version has been\n                                   released.\n      --keep-tmp                   Retain the temporary files created during\n                                   installation.\n      --debug-symbols              Generate debug symbols on build. Source will\n                                   be retained in a cache directory.\n      --build-bottle               Prepare the formula for eventual bottling\n                                   during installation, skipping any\n                                   post-install steps.\n      --skip-post-install          Install but skip any post-install steps.\n      --bottle-arch                Optimise bottles for the specified\n                                   architecture rather than the oldest\n                                   architecture supported by the version of\n                                   macOS the bottles are built on.\n      --display-times              Print install times for each package at the\n                                   end of the run.\n  -i, --interactive                Download and patch formula, then open a\n                                   shell. This allows the user to run\n                                   ./configure --help and otherwise determine\n                                   how to turn the software package into a\n                                   Homebrew package.\n  -g, --git                        Create a Git repository, useful for creating\n                                   patches to the software.\n      --overwrite                  Delete files that already exist in the prefix\n                                   while linking.\n      --cask, --casks              Treat all named arguments as casks.\n      --[no-]binaries              Disable/enable linking of helper executables\n                                   (default: enabled).\n      --require-sha                Require all casks to have a checksum.\n      --[no-]quarantine            Disable/enable quarantining of downloads\n                                   (default: enabled).\n      --adopt                      Adopt existing artifacts in the destination\n                                   that are identical to those being installed.\n                                   Cannot be combined with --force.\n      --skip-cask-deps             Skip installing cask dependencies.\n      --zap                        For use with brew reinstall --cask. Remove\n                                   all files associated with a cask. May remove\n                                   files which are shared between applications.\n      --appdir                     Target location for Applications (default:\n                                   /Applications).\n      --keyboard-layoutdir         Target location for Keyboard Layouts\n                                   (default: /Library/Keyboard Layouts).\n      --colorpickerdir             Target location for Color Pickers (default:\n                                   ~/Library/ColorPickers).\n      --prefpanedir                Target location for Preference Panes\n                                   (default: ~/Library/PreferencePanes).\n      --qlplugindir                Target location for QuickLook Plugins\n                                   (default: ~/Library/QuickLook).\n      --mdimporterdir              Target location for Spotlight Plugins\n                                   (default: ~/Library/Spotlight).\n      --dictionarydir              Target location for Dictionaries (default:\n                                   ~/Library/Dictionaries).\n      --fontdir                    Target location for Fonts (default:\n                                   ~/Library/Fonts).\n      --servicedir                 Target location for Services (default:\n                                   ~/Library/Services).\n      --input-methoddir            Target location for Input Methods (default:\n                                   ~/Library/Input Methods).\n      --internet-plugindir         Target location for Internet Plugins\n                                   (default: ~/Library/Internet Plug-Ins).\n      --audio-unit-plugindir       Target location for Audio Unit Plugins\n                                   (default:\n                                   ~/Library/Audio/Plug-Ins/Components).\n      --vst-plugindir              Target location for VST Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST).\n      --vst3-plugindir             Target location for VST3 Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST3).\n      --screen-saverdir            Target location for Screen Savers (default:\n                                   ~/Library/Screen Savers).\n      --language                   Comma-separated list of language codes to\n                                   prefer for cask installation. The first\n                                   matching language is used, otherwise it\n                                   reverts to the cask's default language. The\n                                   default value is the language of your system.\n  -q, --quiet                      Make some output more quiet.\n  -h, --help                       Show this message.\n\nError: Invalid usage: This command requires at least 1 formula or cask argument."}
2023-09-10 11:33:53,591 p=20269 u=dclunn n=ansible | failed: [localhost] (item=curl) => {"ansible_loop_var": "item", "changed": false, "item": "curl", "msg": "Usage: brew install [options] formula|cask [...]\n\nInstall a formula or cask. Additional options specific to a formula may be\nappended to the command.\n\nUnless HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK is set, brew upgrade or brew\nreinstall will be run for outdated dependents and dependents with broken\nlinkage, respectively.\n\nUnless HOMEBREW_NO_INSTALL_CLEANUP is set, brew cleanup will then be run for\nthe installed formulae or, every 30 days, for all formulae.\n\nUnless HOMEBREW_NO_INSTALL_UPGRADE is set, brew install formula will\nupgrade formula if it is already installed but outdated.\n\n  -d, --debug                      If brewing fails, open an interactive\n                                   debugging session with access to IRB or a\n                                   shell inside the temporary build directory.\n  -f, --force                      Install formulae without checking for\n                                   previously installed keg-only or non-migrated\n                                   versions. When installing casks, overwrite\n                                   existing files (binaries and symlinks are\n                                   excluded, unless originally from the same\n                                   cask).\n  -v, --verbose                    Print the verification and postinstall steps.\n  -n, --dry-run                    Show what would be installed, but do not\n                                   actually install anything.\n      --formula, --formulae        Treat all named arguments as formulae.\n      --ignore-dependencies        An unsupported Homebrew development flag to\n                                   skip installing any dependencies of any kind.\n                                   If the dependencies are not already present,\n                                   the formula will have issues. If you're not\n                                   developing Homebrew, consider adjusting your\n                                   PATH rather than using this flag.\n      --only-dependencies          Install the dependencies with specified\n                                   options but do not install the formula\n                                   itself.\n      --cc                         Attempt to compile using the specified\n                                   compiler, which should be the name of the\n                                   compiler's executable, e.g. gcc-7 for GCC\n                                   7. In order to use LLVM's clang, specify\n                                   llvm_clang. To use the Apple-provided\n                                   clang, specify clang. This option will only\n                                   accept compilers that are provided by\n                                   Homebrew or bundled with macOS. Please do not\n                                   file issues if you encounter errors while\n                                   using this option.\n  -s, --build-from-source          Compile formula from source even if a\n                                   bottle is provided. Dependencies will still\n                                   be installed from bottles if they are\n                                   available.\n      --force-bottle               Install from a bottle if it exists for the\n                                   current or newest version of macOS, even if\n                                   it would not normally be used for\n                                   installation.\n      --include-test               Install testing dependencies required to run\n                                   brew test formula.\n      --HEAD                       If formula defines it, install the HEAD\n                                   version, aka. main, trunk, unstable, master.\n      --fetch-HEAD                 Fetch the upstream repository to detect if\n                                   the HEAD installation of the formula is\n                                   outdated. Otherwise, the repository's HEAD\n                                   will only be checked for updates when a new\n                                   stable or development version has been\n                                   released.\n      --keep-tmp                   Retain the temporary files created during\n                                   installation.\n      --debug-symbols              Generate debug symbols on build. Source will\n                                   be retained in a cache directory.\n      --build-bottle               Prepare the formula for eventual bottling\n                                   during installation, skipping any\n                                   post-install steps.\n      --skip-post-install          Install but skip any post-install steps.\n      --bottle-arch                Optimise bottles for the specified\n                                   architecture rather than the oldest\n                                   architecture supported by the version of\n                                   macOS the bottles are built on.\n      --display-times              Print install times for each package at the\n                                   end of the run.\n  -i, --interactive                Download and patch formula, then open a\n                                   shell. This allows the user to run\n                                   ./configure --help and otherwise determine\n                                   how to turn the software package into a\n                                   Homebrew package.\n  -g, --git                        Create a Git repository, useful for creating\n                                   patches to the software.\n      --overwrite                  Delete files that already exist in the prefix\n                                   while linking.\n      --cask, --casks              Treat all named arguments as casks.\n      --[no-]binaries              Disable/enable linking of helper executables\n                                   (default: enabled).\n      --require-sha                Require all casks to have a checksum.\n      --[no-]quarantine            Disable/enable quarantining of downloads\n                                   (default: enabled).\n      --adopt                      Adopt existing artifacts in the destination\n                                   that are identical to those being installed.\n                                   Cannot be combined with --force.\n      --skip-cask-deps             Skip installing cask dependencies.\n      --zap                        For use with brew reinstall --cask. Remove\n                                   all files associated with a cask. May remove\n                                   files which are shared between applications.\n      --appdir                     Target location for Applications (default:\n                                   /Applications).\n      --keyboard-layoutdir         Target location for Keyboard Layouts\n                                   (default: /Library/Keyboard Layouts).\n      --colorpickerdir             Target location for Color Pickers (default:\n                                   ~/Library/ColorPickers).\n      --prefpanedir                Target location for Preference Panes\n                                   (default: ~/Library/PreferencePanes).\n      --qlplugindir                Target location for QuickLook Plugins\n                                   (default: ~/Library/QuickLook).\n      --mdimporterdir              Target location for Spotlight Plugins\n                                   (default: ~/Library/Spotlight).\n      --dictionarydir              Target location for Dictionaries (default:\n                                   ~/Library/Dictionaries).\n      --fontdir                    Target location for Fonts (default:\n                                   ~/Library/Fonts).\n      --servicedir                 Target location for Services (default:\n                                   ~/Library/Services).\n      --input-methoddir            Target location for Input Methods (default:\n                                   ~/Library/Input Methods).\n      --internet-plugindir         Target location for Internet Plugins\n                                   (default: ~/Library/Internet Plug-Ins).\n      --audio-unit-plugindir       Target location for Audio Unit Plugins\n                                   (default:\n                                   ~/Library/Audio/Plug-Ins/Components).\n      --vst-plugindir              Target location for VST Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST).\n      --vst3-plugindir             Target location for VST3 Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST3).\n      --screen-saverdir            Target location for Screen Savers (default:\n                                   ~/Library/Screen Savers).\n      --language                   Comma-separated list of language codes to\n                                   prefer for cask installation. The first\n                                   matching language is used, otherwise it\n                                   reverts to the cask's default language. The\n                                   default value is the language of your system.\n  -q, --quiet                      Make some output more quiet.\n  -h, --help                       Show this message.\n\nError: Invalid usage: This command requires at least 1 formula or cask argument."}
2023-09-10 11:33:56,120 p=20269 u=dclunn n=ansible | failed: [localhost] (item=neovim) => {"ansible_loop_var": "item", "changed": false, "item": "neovim", "msg": "Usage: brew install [options] formula|cask [...]\n\nInstall a formula or cask. Additional options specific to a formula may be\nappended to the command.\n\nUnless HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK is set, brew upgrade or brew\nreinstall will be run for outdated dependents and dependents with broken\nlinkage, respectively.\n\nUnless HOMEBREW_NO_INSTALL_CLEANUP is set, brew cleanup will then be run for\nthe installed formulae or, every 30 days, for all formulae.\n\nUnless HOMEBREW_NO_INSTALL_UPGRADE is set, brew install formula will\nupgrade formula if it is already installed but outdated.\n\n  -d, --debug                      If brewing fails, open an interactive\n                                   debugging session with access to IRB or a\n                                   shell inside the temporary build directory.\n  -f, --force                      Install formulae without checking for\n                                   previously installed keg-only or non-migrated\n                                   versions. When installing casks, overwrite\n                                   existing files (binaries and symlinks are\n                                   excluded, unless originally from the same\n                                   cask).\n  -v, --verbose                    Print the verification and postinstall steps.\n  -n, --dry-run                    Show what would be installed, but do not\n                                   actually install anything.\n      --formula, --formulae        Treat all named arguments as formulae.\n      --ignore-dependencies        An unsupported Homebrew development flag to\n                                   skip installing any dependencies of any kind.\n                                   If the dependencies are not already present,\n                                   the formula will have issues. If you're not\n                                   developing Homebrew, consider adjusting your\n                                   PATH rather than using this flag.\n      --only-dependencies          Install the dependencies with specified\n                                   options but do not install the formula\n                                   itself.\n      --cc                         Attempt to compile using the specified\n                                   compiler, which should be the name of the\n                                   compiler's executable, e.g. gcc-7 for GCC\n                                   7. In order to use LLVM's clang, specify\n                                   llvm_clang. To use the Apple-provided\n                                   clang, specify clang. This option will only\n                                   accept compilers that are provided by\n                                   Homebrew or bundled with macOS. Please do not\n                                   file issues if you encounter errors while\n                                   using this option.\n  -s, --build-from-source          Compile formula from source even if a\n                                   bottle is provided. Dependencies will still\n                                   be installed from bottles if they are\n                                   available.\n      --force-bottle               Install from a bottle if it exists for the\n                                   current or newest version of macOS, even if\n                                   it would not normally be used for\n                                   installation.\n      --include-test               Install testing dependencies required to run\n                                   brew test formula.\n      --HEAD                       If formula defines it, install the HEAD\n                                   version, aka. main, trunk, unstable, master.\n      --fetch-HEAD                 Fetch the upstream repository to detect if\n                                   the HEAD installation of the formula is\n                                   outdated. Otherwise, the repository's HEAD\n                                   will only be checked for updates when a new\n                                   stable or development version has been\n                                   released.\n      --keep-tmp                   Retain the temporary files created during\n                                   installation.\n      --debug-symbols              Generate debug symbols on build. Source will\n                                   be retained in a cache directory.\n      --build-bottle               Prepare the formula for eventual bottling\n                                   during installation, skipping any\n                                   post-install steps.\n      --skip-post-install          Install but skip any post-install steps.\n      --bottle-arch                Optimise bottles for the specified\n                                   architecture rather than the oldest\n                                   architecture supported by the version of\n                                   macOS the bottles are built on.\n      --display-times              Print install times for each package at the\n                                   end of the run.\n  -i, --interactive                Download and patch formula, then open a\n                                   shell. This allows the user to run\n                                   ./configure --help and otherwise determine\n                                   how to turn the software package into a\n                                   Homebrew package.\n  -g, --git                        Create a Git repository, useful for creating\n                                   patches to the software.\n      --overwrite                  Delete files that already exist in the prefix\n                                   while linking.\n      --cask, --casks              Treat all named arguments as casks.\n      --[no-]binaries              Disable/enable linking of helper executables\n                                   (default: enabled).\n      --require-sha                Require all casks to have a checksum.\n      --[no-]quarantine            Disable/enable quarantining of downloads\n                                   (default: enabled).\n      --adopt                      Adopt existing artifacts in the destination\n                                   that are identical to those being installed.\n                                   Cannot be combined with --force.\n      --skip-cask-deps             Skip installing cask dependencies.\n      --zap                        For use with brew reinstall --cask. Remove\n                                   all files associated with a cask. May remove\n                                   files which are shared between applications.\n      --appdir                     Target location for Applications (default:\n                                   /Applications).\n      --keyboard-layoutdir         Target location for Keyboard Layouts\n                                   (default: /Library/Keyboard Layouts).\n      --colorpickerdir             Target location for Color Pickers (default:\n                                   ~/Library/ColorPickers).\n      --prefpanedir                Target location for Preference Panes\n                                   (default: ~/Library/PreferencePanes).\n      --qlplugindir                Target location for QuickLook Plugins\n                                   (default: ~/Library/QuickLook).\n      --mdimporterdir              Target location for Spotlight Plugins\n                                   (default: ~/Library/Spotlight).\n      --dictionarydir              Target location for Dictionaries (default:\n                                   ~/Library/Dictionaries).\n      --fontdir                    Target location for Fonts (default:\n                                   ~/Library/Fonts).\n      --servicedir                 Target location for Services (default:\n                                   ~/Library/Services).\n      --input-methoddir            Target location for Input Methods (default:\n                                   ~/Library/Input Methods).\n      --internet-plugindir         Target location for Internet Plugins\n                                   (default: ~/Library/Internet Plug-Ins).\n      --audio-unit-plugindir       Target location for Audio Unit Plugins\n                                   (default:\n                                   ~/Library/Audio/Plug-Ins/Components).\n      --vst-plugindir              Target location for VST Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST).\n      --vst3-plugindir             Target location for VST3 Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST3).\n      --screen-saverdir            Target location for Screen Savers (default:\n                                   ~/Library/Screen Savers).\n      --language                   Comma-separated list of language codes to\n                                   prefer for cask installation. The first\n                                   matching language is used, otherwise it\n                                   reverts to the cask's default language. The\n                                   default value is the language of your system.\n  -q, --quiet                      Make some output more quiet.\n  -h, --help                       Show this message.\n\nError: Invalid usage: This command requires at least 1 formula or cask argument."}
2023-09-10 11:33:58,655 p=20269 u=dclunn n=ansible | failed: [localhost] (item=git) => {"ansible_loop_var": "item", "changed": false, "item": "git", "msg": "Usage: brew install [options] formula|cask [...]\n\nInstall a formula or cask. Additional options specific to a formula may be\nappended to the command.\n\nUnless HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK is set, brew upgrade or brew\nreinstall will be run for outdated dependents and dependents with broken\nlinkage, respectively.\n\nUnless HOMEBREW_NO_INSTALL_CLEANUP is set, brew cleanup will then be run for\nthe installed formulae or, every 30 days, for all formulae.\n\nUnless HOMEBREW_NO_INSTALL_UPGRADE is set, brew install formula will\nupgrade formula if it is already installed but outdated.\n\n  -d, --debug                      If brewing fails, open an interactive\n                                   debugging session with access to IRB or a\n                                   shell inside the temporary build directory.\n  -f, --force                      Install formulae without checking for\n                                   previously installed keg-only or non-migrated\n                                   versions. When installing casks, overwrite\n                                   existing files (binaries and symlinks are\n                                   excluded, unless originally from the same\n                                   cask).\n  -v, --verbose                    Print the verification and postinstall steps.\n  -n, --dry-run                    Show what would be installed, but do not\n                                   actually install anything.\n      --formula, --formulae        Treat all named arguments as formulae.\n      --ignore-dependencies        An unsupported Homebrew development flag to\n                                   skip installing any dependencies of any kind.\n                                   If the dependencies are not already present,\n                                   the formula will have issues. If you're not\n                                   developing Homebrew, consider adjusting your\n                                   PATH rather than using this flag.\n      --only-dependencies          Install the dependencies with specified\n                                   options but do not install the formula\n                                   itself.\n      --cc                         Attempt to compile using the specified\n                                   compiler, which should be the name of the\n                                   compiler's executable, e.g. gcc-7 for GCC\n                                   7. In order to use LLVM's clang, specify\n                                   llvm_clang. To use the Apple-provided\n                                   clang, specify clang. This option will only\n                                   accept compilers that are provided by\n                                   Homebrew or bundled with macOS. Please do not\n                                   file issues if you encounter errors while\n                                   using this option.\n  -s, --build-from-source          Compile formula from source even if a\n                                   bottle is provided. Dependencies will still\n                                   be installed from bottles if they are\n                                   available.\n      --force-bottle               Install from a bottle if it exists for the\n                                   current or newest version of macOS, even if\n                                   it would not normally be used for\n                                   installation.\n      --include-test               Install testing dependencies required to run\n                                   brew test formula.\n      --HEAD                       If formula defines it, install the HEAD\n                                   version, aka. main, trunk, unstable, master.\n      --fetch-HEAD                 Fetch the upstream repository to detect if\n                                   the HEAD installation of the formula is\n                                   outdated. Otherwise, the repository's HEAD\n                                   will only be checked for updates when a new\n                                   stable or development version has been\n                                   released.\n      --keep-tmp                   Retain the temporary files created during\n                                   installation.\n      --debug-symbols              Generate debug symbols on build. Source will\n                                   be retained in a cache directory.\n      --build-bottle               Prepare the formula for eventual bottling\n                                   during installation, skipping any\n                                   post-install steps.\n      --skip-post-install          Install but skip any post-install steps.\n      --bottle-arch                Optimise bottles for the specified\n                                   architecture rather than the oldest\n                                   architecture supported by the version of\n                                   macOS the bottles are built on.\n      --display-times              Print install times for each package at the\n                                   end of the run.\n  -i, --interactive                Download and patch formula, then open a\n                                   shell. This allows the user to run\n                                   ./configure --help and otherwise determine\n                                   how to turn the software package into a\n                                   Homebrew package.\n  -g, --git                        Create a Git repository, useful for creating\n                                   patches to the software.\n      --overwrite                  Delete files that already exist in the prefix\n                                   while linking.\n      --cask, --casks              Treat all named arguments as casks.\n      --[no-]binaries              Disable/enable linking of helper executables\n                                   (default: enabled).\n      --require-sha                Require all casks to have a checksum.\n      --[no-]quarantine            Disable/enable quarantining of downloads\n                                   (default: enabled).\n      --adopt                      Adopt existing artifacts in the destination\n                                   that are identical to those being installed.\n                                   Cannot be combined with --force.\n      --skip-cask-deps             Skip installing cask dependencies.\n      --zap                        For use with brew reinstall --cask. Remove\n                                   all files associated with a cask. May remove\n                                   files which are shared between applications.\n      --appdir                     Target location for Applications (default:\n                                   /Applications).\n      --keyboard-layoutdir         Target location for Keyboard Layouts\n                                   (default: /Library/Keyboard Layouts).\n      --colorpickerdir             Target location for Color Pickers (default:\n                                   ~/Library/ColorPickers).\n      --prefpanedir                Target location for Preference Panes\n                                   (default: ~/Library/PreferencePanes).\n      --qlplugindir                Target location for QuickLook Plugins\n                                   (default: ~/Library/QuickLook).\n      --mdimporterdir              Target location for Spotlight Plugins\n                                   (default: ~/Library/Spotlight).\n      --dictionarydir              Target location for Dictionaries (default:\n                                   ~/Library/Dictionaries).\n      --fontdir                    Target location for Fonts (default:\n                                   ~/Library/Fonts).\n      --servicedir                 Target location for Services (default:\n                                   ~/Library/Services).\n      --input-methoddir            Target location for Input Methods (default:\n                                   ~/Library/Input Methods).\n      --internet-plugindir         Target location for Internet Plugins\n                                   (default: ~/Library/Internet Plug-Ins).\n      --audio-unit-plugindir       Target location for Audio Unit Plugins\n                                   (default:\n                                   ~/Library/Audio/Plug-Ins/Components).\n      --vst-plugindir              Target location for VST Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST).\n      --vst3-plugindir             Target location for VST3 Plugins (default:\n                                   ~/Library/Audio/Plug-Ins/VST3).\n      --screen-saverdir            Target location for Screen Savers (default:\n                                   ~/Library/Screen Savers).\n      --language                   Comma-separated list of language codes to\n                                   prefer for cask installation. The first\n                                   matching language is used, otherwise it\n                                   reverts to the cask's default language. The\n                                   default value is the language of your system.\n  -q, --quiet                      Make some output more quiet.\n  -h, --help                       Show this message.\n\nError: Invalid usage: This command requires at least 1 formula or cask argument."}
2023-09-10 11:33:58,657 p=20269 u=dclunn n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************
2023-09-10 11:33:58,657 p=20269 u=dclunn n=ansible | localhost                  : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-09-10 11:34:38,574 p=21941 u=dclunn n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-09-10 11:34:38,575 p=21941 u=dclunn n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-09-10 11:34:38,655 p=21941 u=dclunn n=ansible | PLAY [localhost] *************************************************************************************************************************************************************************************
2023-09-10 11:34:38,668 p=21941 u=dclunn n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************
2023-09-10 11:34:39,236 p=21941 u=dclunn n=ansible | ok: [localhost]
2023-09-10 11:34:39,241 p=21941 u=dclunn n=ansible | TASK [Install things] ********************************************************************************************************************************************************************************
2023-09-10 11:34:40,430 p=21941 u=dclunn n=ansible | changed: [localhost] => (item=tmux)
2023-09-10 11:34:41,567 p=21941 u=dclunn n=ansible | changed: [localhost] => (item=curl)
2023-09-10 11:34:42,700 p=21941 u=dclunn n=ansible | changed: [localhost] => (item=neovim)
2023-09-10 11:34:43,833 p=21941 u=dclunn n=ansible | changed: [localhost] => (item=git)
2023-09-10 11:34:43,842 p=21941 u=dclunn n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************
2023-09-10 11:34:43,842 p=21941 u=dclunn n=ansible | localhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-09-10 11:39:37,896 p=22610 u=dclunn n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-09-10 11:39:37,898 p=22610 u=dclunn n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-09-10 11:39:37,979 p=22610 u=dclunn n=ansible | PLAY [localhost] *************************************************************************************************************************************************************************************
2023-09-10 11:39:37,993 p=22610 u=dclunn n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************
2023-09-10 11:39:38,547 p=22610 u=dclunn n=ansible | ok: [localhost]
2023-09-10 11:39:38,553 p=22610 u=dclunn n=ansible | TASK [Install things] ********************************************************************************************************************************************************************************
2023-09-10 11:39:42,556 p=22610 u=dclunn n=ansible | changed: [localhost]
2023-09-10 11:39:42,565 p=22610 u=dclunn n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************
2023-09-10 11:39:42,565 p=22610 u=dclunn n=ansible | localhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-09-10 11:39:46,811 p=23129 u=dclunn n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-09-10 11:39:46,812 p=23129 u=dclunn n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-09-10 11:39:46,890 p=23129 u=dclunn n=ansible | PLAY [localhost] *************************************************************************************************************************************************************************************
2023-09-10 11:39:46,903 p=23129 u=dclunn n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************
2023-09-10 11:39:47,232 p=23129 u=dclunn n=ansible | ok: [localhost]
2023-09-10 11:39:47,237 p=23129 u=dclunn n=ansible | TASK [Install things] ********************************************************************************************************************************************************************************
2023-09-10 11:40:04,785 p=23129 u=dclunn n=ansible | changed: [localhost]
2023-09-10 11:40:04,793 p=23129 u=dclunn n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************
2023-09-10 11:40:04,793 p=23129 u=dclunn n=ansible | localhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
